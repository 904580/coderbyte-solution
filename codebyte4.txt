function LetterChanges(str) { 
  var vowels = 'aeiou', result = '', changedChar;
  for (i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);
    if (c >= 97 && c < 122)
      changedChar = String.fromCharCode(c + 1);
    else if (c == 122)
      changedChar = String.fromCharCode(97);
    else
      changedChar = str[i];

    if (vowels.indexOf(changedChar) != -1)
      changedChar = changedChar.toUpperCase();

    result += changedChar;
  }
  return result;
}

------------------------
function PrimeTime(num) {
  // if less than 2
  if (num < 2) return false;
  // if not an int
  if (num !== Math.ceil(num)) return false;
  // check every whole number from 2 to the square root of n.
  // If any of these divides n exactly, n cannot be prime.
  for (var i = 2; i <= Math.sqrt(num); i++) {
    if (num % i === 0) return false;
  }

  return true;
}


--------------------------------------
 run length (count the number of consecutive letters in a word)----

function RunLength(str) {
  var newStr = "";
  var letter = str[0];
  var counter = 1;
  for (i=1;i<str.length;i++) {
    if (str[i] === str[i-1]) {
      counter++;
      letter = str[i];
    }
    else {
      newStr += counter;
      newStr += letter;
      letter = str[i];
      counter = 1;
    }
    if (i === str.length-1) {
      newStr += counter;
      newStr += letter;
    }
  }

  return newStr;
}
----------------------------------------------------------------------

prime mover (output the n'th prime) [the first 10,000 primes]
/////////////////////////////////////////////////


function PrimeMover(num) {
  var primeList = [2];
  var isPrime = true;
  // go through every number
  for(i=3;i<=104729;i++) {
    // check if the number is a prime
    isPrime = true;
    for (j=2;j<=Math.sqrt(i);j++) {
      if (i % j === 0) {
        isPrime = false;
        break;
      }
    }
    if (isPrime) {
      primeList.push(i);
    }
    // break when found the prime
    if (primeList.length === num) {
      break;
    }
  }

  return primeList[num-1];
}


------------------------------------------
/ palindrome 2 (if a palindrome regardless of punctuation)

function PalindromeTwo(str) {
  str = str.toLowerCase().replace(/[^a-z]/g,"");
  return str === str.split("").reverse().join("");
}


-----------------------------------------------

division (return the greatest common factor of 2 numbers)

function Division(num1,num2) {
  var smallest, largest;
  var factors = [];

  if (num1 < num2) {
    smallest = num1;
    largest = num2;
  } else {
    smallest = num2;
    largest = num1;
  }

  // smallest because fewer to parse, reverse because less in 2nd loop
  for(i=smallest;i > 0;i--) {
    console.log(i);
    if (smallest % i === 0) {
      factors.push(i);
    }
  }
  for(i=0;i<factors.length;i++) {
    if (largest % factors[i] === 0) {
      return factors[i];
    }
  }

  return 1;
}


--------------------------------------------------------
string scramble (if str2 letters are within str1)

function StringScramble(str1,str2) {
  str1 = str1.toLowerCase().split("");
  str2 = str2.toLowerCase().split("");
  // parse str2 to see if in str1
  for(i=0;i<str2.length;i++) {
    // if str2 letter not in str1
    if (str1.indexOf(str2[i]) === -1) {
      return false;
    }
    else {
      // remove that letter from str1 and continue
      str1.splice(str1.indexOf(str2[i]),1);
    }
  }

  return true;
}

-------------------------------------------------------------

/ arth geo 2 (if Arithmetic or Geometric)

function ArithGeoII(arr) {
  if (arr.length < 2) {
    return -1;
  }

  var isArith = 0;
  var isGeo = 0;
  var arith = arr[1] - arr[0];
  var geo = arr[1] / arr[0];

  for(i=1;i<arr.length;i++) {
    if (arr[i] - arr[i-1] !== arith) {
      isArith++;
    }
    if (arr[i] / arr[i-1] !== geo) {
      isGeo++;
    }
  }

  if (isArith===0) {
    return "Arithmetic";
  }
  else if (isGeo===0) {
    return "Geometric";
  }
  else {
    return -1;
  }
}

---------------------------------------------
array additions (if reast of array equals largest [any combination]

function ArrayAddition(arr) { // does not work 9/10
  arr = arr.sort(function(a,b){return a<b});
  for(i=1;i<arr.length;i++){
    var sum = 0;
    for(j=1;j<arr.length;j++){
      if (i !== j) {
        sum+=arr[j];
        if (sum === arr[0]) {
          return true;
        }
      }
    }
  }

  return false;
}
---------------------------------------------------------

 binary converter

function BinaryConverter(str) {
  str = str.split("");
  var sum = 0;
  var mult = 1;
  for(i=str.length-1;i>=0;i--){
    sum += str[i]*mult;
    mult *=2;
  }
  return sum;
}

----------------------------------

caesar cipher (change letter over so many num)

function CaesarCipher(str,num) { // does not work 9/10
  var alpha = "abcdefghijklmnopqrstuvwxyz"
  var cipher = "";
  for(i=0;i<str.length;i++){
    var index = alpha.indexOf(str[i].toLowerCase());
    if (index !== -1) {
      var ciperIndex = index+num;
      if (ciperIndex >= 26) {
        ciperIndex = ciperIndex % 26;
      }
      cipher += alpha[ciperIndex];
    } else {
      cipher += str[i];
    }
  }
  return cipher;
}


